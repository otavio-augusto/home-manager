(defwidget bar [screen]
  (centerbox :orientation "v"
    (box :class "segment-top"
         :valign "start"
      (top :screen screen))
    (box :valign "center"
         :class "middle"
      (middle :screen screen))
    (box :valign "end"
         :class "segment-bottom"
      (bottom :screen screen))))

; ┓ ┏┏┓┳┓┓┏┓┏┓┏┓┏┓┏┓┏┓┏┓
; ┃┃┃┃┃┣┫┃┫ ┗┓┃┃┣┫┃ ┣ ┗┓
; ┗┻┛┗┛┛┗┛┗┛┗┛┣┛┛┗┗┛┗┛┗┛

(deflisten workspacesArray :initial {[1,2,3]} 
  `stdbuf -o0 sh scripts/workspaces.sh`)

(defwidget workspaces [array]
  (box 
    :class "workspaces"
    :orientation "v"
    :space-evenly true
    :halign "center"
    (for entry in array
      (box :class "workspace"
        (button :class "focused ? 'active': 'inactive'}" entry)
      )
    )
  )
)

(defwidget top [screen]
  (box :orientation "v"
    (workspaces :array workspacesArray)
    ;(workspaces :screen {screen == 1 ? "DP-2" : "HDMI-A-1"})
    ;(systray :orientation "v" :icon-size 15 :spacing 10)))
  ;(workspaces :wsp_yuck {screen == 1 ? workspaces_1_yuck : workspaces_2_yuck}))
  )
)

; ┏┓┳┳┏┓┏┳┓┏┓
; ┃┃┃┃┃┃ ┃ ┣ 
; ┗┻┗┛┗┛ ┻ ┗┛

(defwidget quote [] 
  ;(label
  ;  :orientation "h"
  ;  :text "  Memento Mori: Remember you must meet God."
  ;  :angle 90
  ;)
  (label
    :orientation "h"
    :text window 
    :angle 90
    :text window
  )
)

(defwidget middle [screen] 
  (quote)
)

; ┳┳┓┏┓┏┳┓┳┓┳┏┓┏┓
; ┃┃┃┣  ┃ ┣┫┃┃ ┗┓
; ┛ ┗┗┛ ┻ ┛┗┻┗┛┗┛

(defwidget metric [icon ?font-size]
  (box  
    :class "metric"    
    :orientation "v"
    :width 30
    (label 
      :class "metric-icon"
      :style {font-size != "" ? "font-size: ${font-size}rem;" : ""}
      :text icon)
    (children)
  )
)

(defwidget bottom [screen]
  (box 
    :orientation "v"
    :valign "end"
    :height: "150"   
    :spacing "1"

    (metric :icon "" "${round(EWW_RAM.used_mem_perc, 0)}%")
    (metric :icon "" "${round(EWW_CPU.avg, 0)}%")

    ;(date)
    (time)
  )
)

; ┏┳┓┳┳┳┓┏┓
;  ┃ ┃┃┃┃┣ 
;  ┻ ┻┛ ┗┗┛         

(defwidget time []
  (metric
    :icon "󰥔"
    ;:space-evenly true
    :orientation "v"
    ;:halign "center"
    ;:class "metric"
    (box
      :orientation "v"
      (label 
      :class "time"
      :text hour
      )
      (label 
      :class "time"
      :text min
      )
      ;(label 
      ;  :class "time"
      ;  :text sec
      ;)
    )
  )
)

(defwidget large-sym [sym]
  (label :class "metric-icon large-symbol" :text sym))

(defwidget date []
  (box
    :orientation "v"
    (label :text day_word)
    (label :text day)
    (label :text month)
    (label :text year)
  )
)

(deflisten window :initial "   MEMENTO MORI   "
  `stdbuf -o0 sh ./scripts/title.sh`)

(deflisten current_workspace :initial "1"
  "stdbuf -o0 sh scripts/get_active_workspace.sh")

(defpoll hour :interval "1s" "date +%H")
(defpoll min  :interval "1s" "date +%M")
(defpoll sec  :interval "1s" "date +%S")

(defpoll day_word :interval "10m" "date +%a | tr [:upper:] [:lower:]")
(defpoll day      :interval "10m" "date +%d")
(defpoll month    :interval "1h"  "date +%m")
(defpoll year     :interval "1h"  "date +%y")

(defwindow bar_1
  :monitor 0
  ; :monitor "DisplayPort-0"
  :stacking "fg"
  :geometry (geometry :x 0 :y 0 :width "40px" :height "100%" :anchor "center left")
  :reserve (struts :distance "40px" :side "left")
  :exclusive true
  (bar :screen 1))
